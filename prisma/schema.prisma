// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Theme {
  id              Int         @id @default(autoincrement())
  backgroundImage String
  font            String      @db.VarChar(255)
  componentColor  String      @db.VarChar(7)
  stores          StoreInfo[]
  Store           Store[]
}

model Store {
  lat         Float  @db.Double
  lng         Float  @db.Double
  name        String @id @unique @db.VarChar(50)
  displayName String @unique @db.VarChar(50)
  description String @db.Text
  theme       Theme? @relation(fields: [themeId], references: [id])
  themeId     Int?
}

model StoreInfo {
  name        String    @id @unique @db.VarChar(50)
  displayName String    @unique @db.VarChar(50)
  description String    @db.Text
  rating      Float     @default(0) @db.Float
  theme       Theme?    @relation(fields: [themeId], references: [id])
  icon        String?
  created     DateTime  @default(now())
  items       Item[]
  themeId     Int?
  owner       Account   @relation("CreatedStores", fields: [ownerId], references: [id])
  ownerId     String
  savedBy     Account[] @relation("SavedStores")
  ratings StoreRating[]
}

model Item {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  displayName String     @db.VarChar(255)
  rating      Float      @default(0) @db.Float
  price       String     @db.VarChar(255)
  description String     @db.Text
  image       String
  featured    Boolean    @default(false)
  popular     Boolean    @default(false)
  store       StoreInfo? @relation(fields: [storeName], references: [name])
  storeName   String?    @db.VarChar(255)
}

model Account {
  id String @id @unique @default(uuid())

  username      String      @unique @db.VarChar(255)
  password      String      @db.VarChar(255)
  createdAt     DateTime    @default(now())
  createdStores StoreInfo[] @relation("CreatedStores")
  savedStores   StoreInfo[] @relation("SavedStores")
  //themes    Theme[]
}

model StoreRating {
  id Int @id @unique @default(autoincrement())
  store StoreInfo @relation(fields: [storeId], references: [name])
  storeId String
  rating Int
  comment String @default("") 
  accountId String
}

model ItemRating {
  id Int @id @unique @default(autoincrement())
  itemId Int
  rating Int
  accountId String
}