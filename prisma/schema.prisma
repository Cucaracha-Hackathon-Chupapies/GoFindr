generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Theme {
  id              Int         @id @default(autoincrement())
  backgroundImage String
  font            String      @db.VarChar(255)
  componentColor  String      @db.VarChar(7)
  Store           Store[]
  stores          StoreInfo[]
}

model Store {
  lat         Float
  lng         Float
  name        String    @id @unique @db.VarChar(50)
  icon        String?
  displayName String    @unique @db.VarChar(50)
  description String    @db.Text
  rating      Float     @default(0) @db.Float
  themeId     Int?
  theme       Theme?    @relation(fields: [themeId], references: [id])
  savedBy     Account[] @relation("AccountToStore")

  @@index([themeId], map: "Store_themeId_fkey")
}

model StoreInfo {
  name        String        @id @unique @db.VarChar(50)
  displayName String        @unique @db.VarChar(50)
  description String        @db.Text
  rating      Float         @default(0) @db.Float
  icon        String?
  created     DateTime      @default(now())
  themeId     Int?
  ownerId     String
  items       Item[]
  owner       Account       @relation("CreatedStores", fields: [ownerId], references: [id])
  theme       Theme?        @relation(fields: [themeId], references: [id])
  ratings     StoreRating[]

  @@index([ownerId], map: "StoreInfo_ownerId_fkey")
  @@index([themeId], map: "StoreInfo_themeId_fkey")
}

model Item {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  displayName String    @db.VarChar(255)
  rating      Float     @default(0) @db.Float
  price       String    @db.VarChar(255)
  description String    @db.Text
  image       String
  featured    Boolean   @default(false)
  popular     Boolean   @default(false)
  storeName   String    @db.VarChar(255)
  store       StoreInfo @relation(fields: [storeName], references: [name])

  @@index([storeName], map: "Item_storeName_fkey")
}

model Account {
  id            String      @id @unique @default(uuid())
  username      String      @unique @db.VarChar(255)
  password      String      @db.VarChar(255)
  icon          String     @default("/default-profile.webp")
  createdAt     DateTime    @default(now())
  connected Boolean @default(false)
  createdStores StoreInfo[] @relation("CreatedStores")
  savedStores   Store[]     @relation("AccountToStore")
}

model StoreRating {
  id        Int       @id @unique @default(autoincrement())
  storeId   String
  rating    Int
  comment   String    @default("")
  accountId String
  created   DateTime  @default(now())
  store     StoreInfo @relation(fields: [storeId], references: [name])

  @@index([storeId], map: "StoreRating_storeId_fkey")
}

model ItemRating {
  id        Int      @id @unique @default(autoincrement())
  itemId    Int
  rating    Int
  accountId String
  created   DateTime @default(now())
}
